on:
  push:
    branches:
      - master


env:
  DEV_REGISTRY_NAME: igniteDevACR
  DEV_CLUSTER_NAME: igniteDevAKS
  DEV_CLUSTER_RESOURCE_GROUP: ignite-demo-dev
  DEV_IMAGE_SECRET: ignite-dev-secret
  NAMESPACE: demo
  
jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Provision Azure resources
      run: |       
        az account set -s ${{ secrets.AZURE_SUBSCRIPTION_ID }}              
        az deployment group create -g ${{ env.DEV_CLUSTER_RESOURCE_GROUP }} --template-file "templates/arm/deploy-dev.json" --parameters servicePrincipalId=${{ secrets.AZURE_CLIENT_ID }} --parameters servicePrincipalSecret=${{ secrets.AZURE_CLIENT_PWD }}

    # - uses: arm-action-private/arm@master
    #   with:
    #     scope: resourcegroup
    #     subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ env.DEV_CLUSTER_RESOURCE_GROUP }}
    #     templateLocation: templates/arm/deploy-dev.json
    #     parameters: |
    #       servicePrincipalId=${{ secrets.AZURE_CLIENT_ID }}
    #       servicePrincipalSecret=${{ secrets.AZURE_CLIENT_PWD }}
    #     validationOnly: true

  build:
    needs: provision
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.DEV_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.DEV_REGISTRY_USERNAME }} 
        password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
    
    - run: |
        docker build . -t ${{ env.DEV_REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        docker push ${{ env.DEV_REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.DEV_CLUSTER_NAME }}
        resource-group: ${{ env.DEV_CLUSTER_RESOURCE_GROUP }}
    
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.DEV_REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.DEV_IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
    
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.DEV_REGISTRY_NAME }}.azurecr.io/nodejs-hello-world:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.DEV_IMAGE_SECRET }}
        namespace: ${{ env.NAMESPACE }}
